// Generated by CoffeeScript 1.7.1
(function() {
  var Nex,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  require("./panel");

  Nex = this.Nex || require('nex');

  Nex.Widgets.Tabs = (function(_super) {
    __extends(Tabs, _super);

    Tabs.include(Nex.Panel);

    Tabs.prototype.logPrefix = '(App) Tabs: ';

    Tabs.prototype.className = 'tabs';

    Tabs.prototype.elements = {
      'nav': 'navigation',
      'nav a': 'links',
      'section': 'section',
      'section article': 'content'
    };

    Tabs.prototype.events = {
      'tap nav a': 'onClick'
    };

    function Tabs() {
      this.appendMedia = __bind(this.appendMedia, this);
      Tabs.__super__.constructor.apply(this, arguments);
      this.html("<nav></nav>\n<section></section>");
      this.controllers = [];
      this.bind('ready', this.render);
      if (this.path) {
        this.getData(this.path);
      } else {
        this.active(this.getData);
      }
    }

    Tabs.prototype.render = function(result) {
      var asset, col, i, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2;
      for (_i = 0, _len = result.length; _i < _len; _i++) {
        col = result[_i];
        _ref = col.items;
        for (i = _j = 0, _len1 = _ref.length; _j < _len1; i = ++_j) {
          asset = _ref[i];
          this.navigation.append("<a href='#tab" + i + "'>" + (asset.getMeta('title', asset.getMeta('headline'))) + "</a>");
        }
        _ref1 = col.items;
        for (i = _k = 0, _len2 = _ref1.length; _k < _len2; i = ++_k) {
          asset = _ref1[i];
          this.section.append("<article id='#tab" + i + "'>" + (asset.getMeta('text', asset.getMeta('html'))) + "</article>");
        }
        _ref2 = col.items;
        for (_l = 0, _len3 = _ref2.length; _l < _len3; _l++) {
          asset = _ref2[_l];
          this.appendMedia(asset);
        }
      }
      this.links.eq(0).addClass('active');
      return this.content.eq(0).addClass('active');
    };

    Tabs.prototype.onClick = function(e) {
      var target;
      e.preventDefault();
      this.links.removeClass('active');
      this.content.removeClass('active');
      target = $(e.target);
      target.addClass('active');
      return this.content.filter(target.attr('href')).addClass('active');
    };

    Tabs.prototype.appendMedia = function(asset) {
      var el, kind, media, _ref;
      if (!(asset && (el = this.$("." + asset.normname)))) {
        return;
      }
      if (asset.kind === 'Collection') {
        kind = 'Slider';
      } else {
        kind = asset.kind;
      }
      return media = new Nex.Widgets[kind]({
        el: el,
        src: asset.serving_url,
        align: ((_ref = asset.meta.crop) != null ? _ref.value : void 0) || 'center center',
        resolution: asset.resolution,
        uuid: asset.id,
        formats: asset.formats,
        path: asset.path,
        lazy: false,
        animation: asset.getMeta('animation', 'scalerotate'),
        sizemode: asset.getMeta('sizemode', ['crop'])[0]
      }, this.add(media));
    };

    Tabs.prototype.add = function(controller) {
      return this.controllers.push(controller);
    };

    Tabs.prototype.clear = function() {
      var controller, _i, _len, _ref, _results;
      _ref = this.controllers;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        controller = _ref[_i];
        _results.push(controller.release());
      }
      return _results;
    };

    Tabs.prototype.deactivate = function() {
      this.clear();
      return Tabs.__super__.deactivate.apply(this, arguments);
    };

    return Tabs;

  })(Spine.Controller);

  module.exports = Nex.Widgets.Tabs;

}).call(this);
